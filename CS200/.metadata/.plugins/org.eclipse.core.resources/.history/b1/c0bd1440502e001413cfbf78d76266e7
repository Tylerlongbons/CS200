import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class P1 {
	public ArrayList<String> words = new ArrayList<String>();

	public P1(String in) {
		readFile(in);
		writeWords();
	}

	public void readFile(String filename) {
		toList(filename);
		noChars();
		noPunct();
		alphaSort();
		noDuplicates();
	}

	private void toList(String filename) {
		try {
			Scanner scanner = new Scanner(new File(filename));
			while (scanner.hasNext()) {
				String word = scanner.next();
				int search = Collections.binarySearch(words, word.toLowerCase());
				if (search <0)
					words.add(word.toLowerCase());
			}
		} catch (FileNotFoundException e) {
			// TODO How do they want errors
			e.printStackTrace();
		}
	}

	private void noChars() {
		for (int i = 0; i < words.size(); i++) {
			if (words.get(i).contains("<")) {
				String[] split = words.get(i).split("<");
				words.set(i, split[0]);
				for (int j = i; j < words.size(); j++) {
					if (words.get(j).contains(">")) {
						split = words.get(j).split(">");
						words.set(i + 1, split[1]);
						j = words.size();// exits loop
					} else
						words.remove(j);
				}
			}
		}
	}

	private void noPunct() {
		for (int i = 0; i < words.size(); i++) {
			if (punct(words.get(i))) {
				words.remove(i);
				i--;
			}
		}
	}

	private boolean punct(String s) {
		return s.contains("+") || s.contains("-") || s.contains(".")
				|| s.contains(",") || s.contains("!") || s.contains("@")
				|| s.contains("#") || s.contains("$") || s.contains("%")
				|| s.contains("^") || s.contains("&") || s.contains("*")
				|| s.contains("(") || s.contains(")") || s.contains(";")
				|| s.contains("\\") || s.contains("/")|| s.contains("|")
				|| s.contains("<") || s.contains(">") || s.contains("\"") || s.contains(":");
	}

	private void alphaSort() {
		Collections.sort(words);
	}

	private void noDuplicates() {
		for (int i = 0; i < words.size() - 1; i++) {
			if (words.get(i).equals(words.get(i + 1))) {
				words.remove(i + 1);
				i--;
			}
		}
	}

	public void writeWords() {
		System.out.println("WORDS");
		for (String s : words) {
			System.out.println(s);
		}
		System.out.println(words.size());

	}
	
	public static void main(String[] args){
		P1 p = new P1(args[0]);
	}
}
